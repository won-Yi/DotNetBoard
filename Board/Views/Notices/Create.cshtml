@model Board.Models.Notice

@{
    ViewData["Title"] = "Create";
}


@section Styles{
    <script src="https://cdn.ckeditor.com/ckeditor5/34.0.0/classic/ckeditor.js"></script>
    <script src="https://cdn.ckeditor.com/ckeditor5/34.0.0/classic/translations/ko.js"></script>
    <script src="/upload-adapter.js"></script>
    
}
<style>
    .form-select {
        margin-top:30px;
        width: 300px;
    }

    .username{
        border: none;
        border-bottom: 1px solid gray;   
    }

    textarea {
        width: 80%;
        height:20.25em;
        border: 1px solid gray;
        resize: none;
        border-radius: 10px;
    }

    .drag-drop-inside{
        width: 500px;
        height: 300px;
        border: 1px solid gray;
        box-shadow: 2px 3px 9px hsl(0, 0%, 47%);
        padding: 10px;
    }

    .file_box {
        border: 2px solid rgb(13 110 253 / 25%);
        border-radius: 10px;
        margin-top: 20px;
        padding: 40px;
        text-align: center;
    }

    .upload-container {
        position: relative;
    }

        .upload-container input {
            border: 1px solid #92b0b3;
            background: #f1f1f1;
            outline: 2px dashed #92b0b3;
            outline-offset: -10px;
            padding: 100px 0px 100px 250px;
            text-align: center !important;
            width: 100%;
            height:40px;
        }

        .upload-container input:hover {
            background: #ddd;
        }

</style>

<h1>@ViewBag.Category</h1>
<h4>Notice</h4>
<hr />

<div>

     <div>
        @*enctype="multipart/form-data"*@

       @* <form asp-action="Create" method="post" id="createForm" enctype="multipart/form-data">*@
            <select asp-for="Category" name="Category" class="form-select" id="category" style="width:200px;">
                <option value="">All</option>
                <option value="잡담">잡담</option>
                <option value="유머">유머</option>
                <option value="정보">정보</option>
            </select>
            <div class="form-group username" style="margin-bottom:20px; margin-top:20px; width:200px;">
                <label asp-for="UserName" class="control-label">이름</label>
                <input asp-for="UserName" class="form-control" id="username"/>
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" id="titlediv" style="margin-top:20px;">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" id="title" class="form-control title" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            
            
            <div class="content" style="margin-top:20px;">
               
                <label asp-for="Content" class="control-label"></label>
                <textarea asp-for="Content" id="editor" name="Content" class="form-control"></textarea>
               

               @* <label asp-for="Content" class="control-label"></label>
                <textarea asp-for="Content" class=" form-control"></textarea>
                asp-for="Content"
                <span asp-validation-for="Content" class="text-danger"></span>*@
               
            </div>
            @*<div class="upload-container">
                <input type="file" name="files" id="file" multiple />
            </div>*@

            <div class="form-group" style="margin-bottom:20px;">
                <input type="button" value="게시글 작성" class="btn btn-secondary" id="actionCreate" @*onclick="fnSendFile()"*@ />
            </div>
        @*</form>*@
    </div>
    </div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>

        //ClassicEditor
        //    .create(document.querySelector('#editor'))
        //    .catch(error => {
        //        console.error(error);
        //    });

        //이미지를 미리 보여주기 위해 만든 코드.
        class UploadAdapter {
            constructor(loader, url) {
                this.loader = loader;
                this.url = url;
            }

            upload() {
                return this.loader.file.then(file => new Promise((resolve, reject) => {
                    let formData = new FormData();
                    formData.append('file', file);
                    fetch(this.url, {
                        method: 'POST',
                        body: formData,
                    })
                        .then(response => {
                                response.json().then(data => {
                                    const url = new URL(data.imageUrl, window.location.origin); // URL 생성
                                    const absoluteUrl = url.href // 절대 경로 추출
                                    resolve({
                                        default: absoluteUrl
                                    });
                                });
                           
                        })
                        .catch(error => {
                            reject('파일 업로드 중 오류가 발생했습니다.');
                        });
                }));
            }

            abort() {
                // 업로드가 취소되는 경우에 수행할 작업을 여기에 작성합니다.
            }
        }


        ClassicEditor
            .create(document.querySelector('#editor'))
            .then(editor => {
                editor.model.document.on('change', () => {
                    var htmlContent = editor.getData();
                    console.log(htmlContent);
                    document.getElementById("editor").value = htmlContent;
                });

                editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {
                    return new UploadAdapter(loader, 'https://localhost:7295/Notices/Upload');
                };
            })
            .catch(error => {
                console.error(error);
            });

        document.querySelector('#actionCreate').addEventListener('click', () => {
            let content = document.getElementById('editor').value;
            //document.getElementById('editor').value = editorData;
            
            let title = document.getElementById('title').value;
            let username = document.getElementById('username').value;
            let select = document.getElementById('category');
            let selectValue = select.value;
           
            console.log(content, title, username, selectValue)

            $.ajax({
                url: '/Notices/Create',
                data: {
                "content": content,
                "title":title,
                "username":username,
                "category":selectValue,
                },
                type: "POST",
                success: function (data) {
                    console.log(data.result)
                    if (data.result == 0) {
                        //window.location.href = "https://localhost:7295/Notices/Index";
                    }
                    else {
                        alert("실패");
                    }
                },
                error: function (err) {
                                   
                    alert(err.statusText);
                }

            });
        });
    </script>
}


