@model Board.Models.Notice

@{
    ViewData["Title"] = "Create";
}
<style>
<h1>Create</h1>

    .form-select {
        margin-top:30px;
        width: 300px;
    }

    .username{
        border: none;
        border-bottom: 1px solid gray;   
    }

    textarea {
        width: 80%;
        height:20.25em;
        border: 1px solid gray;
        resize: none;
        border-radius: 10px;
    }

    .drag-drop-inside{
        width: 500px;
        height: 300px;
        border: 1px solid gray;
        box-shadow: 2px 3px 9px hsl(0, 0%, 47%);
        padding: 10px;
    }

    .file_box {
        border: 2px solid rgb(13 110 253 / 25%);
        border-radius: 10px;
        margin-top: 20px;
        padding: 40px;
        text-align: center;
    }

    .upload-container {
        position: relative;
    }

        .upload-container input {
            border: 1px solid #92b0b3;
            background: #f1f1f1;
            outline: 2px dashed #92b0b3;
            outline-offset: -10px;
            padding: 100px 0px 100px 250px;
            text-align: center !important;
            width: 100%;
            height:40px;
        }

        .upload-container input:hover {
            background: #ddd;
        }

        
</style>
<h1>@ViewBag.Category</h1>
<h4>Notice</h4>
<hr />
<div>
    <div>
        <form asp-action="Create" method="post" id="createForm" enctype="multipart/form-data">
            @* asp-items="@ViewBag.Categories"*@
            <select asp-for="Category" name="Category" class="form-select" style="width:200px;">
                <option value="">All</option>
                <option value="잡담">잡담</option>
                <option value="유머">유머</option>
                <option value="정보">정보</option>
            </select>
            <div class="form-group username" style="margin-bottom:20px; margin-top:20px; width:200px;">
                <label asp-for="UserName" class="control-label">이름</label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" id="title" style="margin-top:20px;">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control title" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="content" style="margin-top:20px;">
                <label asp-for="Content" class="control-label"></label>
                <textarea asp-for="Content" class=" form-control"></textarea>
                @* asp-for="Content"*@
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="upload-container">
                <input type="file" name="files" id="file" multiple />
            </div>
            @*<button type="button" class="btn btn-primary btn-block" onclick="javascript:fnSendFile();">Upload</button>*@

            <div class="form-group" style="margin-bottom:20px;">
                <input type="submit" value="게시글 작성" class="btn btn-secondary" onclick="fnSendFile()" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>

        function fnSendFile() {

            let formData = new FormData();
            let files = $('input=[name=files]')[0].files;
            for (i = 0; i < files.length; i++) {
                formData.append('files', files[i])
            }

            $.ajax({
                url: '/Notices/Create',
                data: formData,
                type: "POST",
                contentType: false,
                processData: false,
                async: false,
                success: function (data) {
                    if (data.result == 0) {
                                 파일 업로드 후 리스트 초기화
                        alert("파일 업로드 완료!");
                                 컨트롤러 메인 페이지로 이동
                        window.location.href = "/Home";
                    }
                    else {
                        alert("파일 업로드 실패!");
                    }
                },
                error: function (err) {
                             에러일 경우 에러 메세지 출력
                    alert(err.statusText);
                }
            });
      
    </script>
}






@*  var createForm = document.getElementById("createForm");
        var _FormData = new FormData(createForm); // 서버 전송 폼 변수
        var _FILE_MAX_SIZE = 10;        // 업로드 파일 최대 사이즈

        window.onload = function () {
            // 드래그 앤드 드롭 이벤트가 일어나는 태그
            var fileArea = document.getElementById('dragDropArea');
            // 첨부파일  Input태그
            var fileInput = document.getElementById('fileInput');
            // 파일을 드래그 해서 범위 안에 두었을 때 발생하는 이벤트
            fileArea.addEventListener('dragover', function (evt) {
                evt.preventDefault();
                fileArea.classList.add('dragover');
            });
            // 드래그 한 파일을 범위 밖으로 가져 갈 때 발생하는 이벤트
            fileArea.addEventListener('dragleave', function (evt) {
                evt.preventDefault();
                fileArea.classList.remove('dragover');
            });

            // 드래그 한 파일을 범위 안에 두고 마우스를 떼었을 때 발생하는 이벤트
            fileArea.addEventListener('drop', function (evt) {
                evt.preventDefault();
                fileArea.classList.remove('dragenter');
                // 드래그 한 파일 정보를 가져오는 부분
                var files = evt.dataTransfer.files;
                // 첨부파일  Input태그에 드래그 한 파일을 적용
                fileInput.files = files;
                // 파일 선택 확인 함수 호출
                fnSelectFile();
            });
        }

        // 파일 선택 확인
        function fnSelectFile() {
            // 파일 사이즈 확인
            var maxsize = _FILE_MAX_SIZE * 1024 * 1024;
            // 첨부파일 Input태그 호출
            var input = document.getElementById('fileInput');
            // Input 태그에서 선택된 파일 개수 만큼 반복
            for (var i = 0; i < input.files.length; ++i) {
                var name = input.files.item(i).name; // 파일명
                var size = input.files.item(i).size; // 파일 사이즈

                // 파일 사이즈 체크
                if (size > maxsize) {
                    alert("파일은 " + _FILE_MAX_SIZE + "Byte 이하만 가능합니다.");
                }
                else {
                    // 폼 데이터에 파일 정보 보존
                    _FormData.append("files", input.files[i]);
                }
            }

            // 선택 파일을 화면에 표시
            fnDisplayFileList();
        }

        // 선택한 파일을 삭제
        function fnCancelFile(name, size) {
            // 폼 데이터의 파일 정보 취득
            var filelist = _FormData.getAll("files");
            // 폼 데이터의 파일 정보 삭제
            _FormData.delete("files");
            // 취득한 파일 정보 개수 만큼 반복
            for (var file of filelist) {
                // 삭제 대상 파일인 경우 스킵
                if (file.name == name && file.size == size) {
                    continue;
                }
                // 폼 데이터에 파일 정보를 다시 보존
                _FormData.append("files", file);
            }

            // 선택 파일을 화면에 표시
            fnDisplayFileList();
        }

        // 선택 파일을 화면에 표시
        function fnDisplayFileList() {
            var children = "";
            var output = document.getElementById('fileList');
            filelist = _FormData.getAll("files");
            for (var file of filelist) {
                var name = file.name;
                var size = file.size;
                children += '📎&nbsp;&nbsp;&nbsp;' + name + ' ';
                children += "<span style='cursor:pointer;color:red;' onclick='javascript:fnCancelFile(\"" + name + "\", " + size + ");'>✖</span>
<Br />";
            }
            // 추가되는 파일 목록 태그를 HTML에 적용
            output.innerHTML = children;
        }

        // 파일 업로드 작업
        function fnSendFile() {
            $.ajax({
                url: '/Notices/Create',
                type: "POST",
                contentType: false,
                processData: false,
                data: _FormData,
                async: false,
                success: function (data) {
                    if (data.result == 0) {
                         파일 업로드 후 리스트 초기화
                        alert("파일 업로드 완료!");
                         컨트롤러 메인 페이지로 이동
                        window.location.href = "/Home";
                    }
                    else {
                        alert("파일 업로드 실패!");
                    }
                },
                error: function (err) {
                     에러일 경우 에러 메세지 출력
                    alert(err.statusText);
                }
            });
        }*@