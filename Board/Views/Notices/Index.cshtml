@model Board.Models.NoticeCategory


@{
    ViewData["Title"] = "Index";
}

@section Scripts{
    <script>
        function ChangeSelete() {
            var optionSeleted = document.getElementById('selected');
            var selected = optionSeleted.options[optionSeleted.selectedIndex].value;
            console.log(selected)
            window.location.href = "/Notices/Index/?Category=" + selected;
        }
    

        const rowPerPage = 10; //페이지당 몇개를 보여줄지
        const rows = document.querySelectorAll('#trs');
        const rowsCount = '@Model.Notices.Count'
        const PageCount = Math.ceil(rowsCount/rowPerPage);
        const numbers = document.querySelector('#numbers');
        let idx ;

        console.log(rows)

        //페이지네이션 생성
        for (let i = 1 ; i <= PageCount; i++) {
            numbers.innerHTML += `<li style="margin-left:10px;border-radius: 30px;"><a class="page-link" href=""> ${i} </a></li>`
        }
        const numbersBtn = numbers.querySelectorAll('a');
        numbersBtn.forEach(function(item,idx){
            item.addEventListener('click', (e)=>{
                e.preventDefault();
                for (nb of numbersBtn){
                   nb.classList.remove('active');
                }
                e.target.classList.add('active');

                //테이블을 출력해주는 함수
               displayRow(idx)

            })
        });//

        function displayRow(idx){

            let start = idx * rowPerPage;
            let end = start + rowPerPage; //0이면 10, 1이면 20,

            //[...row]이것도 Array.from(rows)와 같은 의미
            let rowsArray = Array.from(rows);
            //console.log(rowsArray)
            for (ra of rowsArray) {
                ra.style.display='none';
            }

            let newRows = rowsArray.slice(start,end);
            for (nr of newRows){
                nr.style.display = '';
            }//
        }//displayRow

        //시작하자마자 실행되는 함수
        displayRow(0);
        

</script>
}

<style>
    #numbers li a.active{
       
    }

    .paginationwrap {
        width: 100%;
        height:80px;
        
        position: relative;
    }

    .pagination{
        width: 100px;
        height: 100px;
       
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style>
@*
asp-items="Model.Categorys"*@

<div style="width:500px; height:50px; margin-top:40px; display: flex;">
    <div style="padding-right:10px;">
        <select asp-for="Category" asp-items="Model.Categorys" id="selected" onchange="ChangeSelete()" class="form-select" aria-label="Default select example">
            <option value="">All</option>
            @*<option value="무료나눔"></option>
            <option value="정보">정보</option>
            <option value="잡담">잡담</option>*@
        </select>
    </div>
    <div>
        
    </div>
    <div>
        <form asp-controller="Notices" asp-action="Index" method="get">
            <p>
                Title: <input type="text" name="SearchString" />
                <input type="submit" value="Filter" />
            </p>
        </form>
    </div>
</div>


<div>
    <span id="displayCount"></span>
        <table class="table table-striped table-hover">
        <thead id="theadalways">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Notices![0].Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notices![0].Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notices![0].Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notices![0].UserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Notices![0].UpdateDate)
                </th>
                <th>
                    조회수
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Notices!)
            {
                <tr id="trs">
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdateDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Views_Number)
                    </td>

                </tr>
            }
    </table>
</div>
<div class="paginationwrap">
    <div class="pagination">
        <!-- pagination -->
        <ol id="numbers" style="display:flex; list-style: none;">
        </ol>
    </div>
</div>

<p>
    <a asp-action="Create"><button type="button" class="btn btn-outline-secondary">글쓰기</button></a>
</p>

